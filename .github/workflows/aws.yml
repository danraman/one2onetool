name: data_file
on:
 workflow_dispatch: {}
 push:
    branches:
      - "release"
      - "staging"
      
#Environmental Variables
env:
  AWS_REGION: us-east-1                           
  ECR_REPOSITORY: assignment21jul                 
  ECS_SERVICE: assignment-service                 
  ECS_CLUSTER: assignment-cluster                 
  ECS_TASK_DEFINITION: assignment-task.json                                             
  CONTAINER_NAME: assignment-container            
                                                  

permissions:
  contents: read

jobs:
 Test:
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false      
      matrix:
        language: [ 'javascript' ]
    steps:
     - name: check out the code
       uses: actions/checkout@v3
       
     - name: configure node.js for compiling
       uses: actions/setup-node@v1
       with:
         node-version:  16.x
         
     - name: list the directory contents
       run: ls -lart
       
     - name: Install dependencies
       run: npm ci
       
     - name: compile the node js application
       run: npm install    
    
     - name: Initialize CodeQL
       uses: github/codeql-action/init@v2
       with:
         queries: +security-extended
         languages: ${{ matrix.language }}

     - name: Perform CodeQL Analysis
       uses: github/codeql-action/analyze@v1
       
     - name: Send mail
       if: failure()
       uses: dawidd6/action-send-mail@v3
       with:
         server_address: smtp.mail.yahoo.com
         server_port: 465
         username: ${{secrets.MAIL_USERNAME}}
         password: ${{secrets.MAIL_PASSWORD}}
         subject: Code quality has issues in ${{ github.repository }} --  ${{job.status}}
         body: "Job completed ${{job.status}} ${{ toJson(job) }}"
         to: get.draman@gmail.com
         from: Git hub actions
 
 Build:
   needs: Test
   runs-on: ubuntu-latest
   steps:
     - name: check out the code
       uses: actions/checkout@v3
       
     - name: configure node.js for compiling
       uses: actions/setup-node@v1
       with:
         node-version:  16.x
         
     - name: list the directory contents
       run: ls -lart

     - name: compile the node js application
       run: npm install
       
     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
         aws-region: ${{ env.AWS_REGION }}

     - name: Login to Amazon ECR
       id: login-ecr
       uses: aws-actions/amazon-ecr-login@v1

     - name: Build, tag, and push image to Amazon ECR
       id: build-image
       env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         IMAGE_TAG: "master-one2oneapp-${{ github.sha }}"
       run: |
        # Build a docker container and
        # push it to ECR so that it can
        # be deployed to ECS.
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"


 Staging_Deploy:
   needs: Build
   runs-on: ubuntu-latest
   steps:
    
 
     - name: Deploy Amazon ECS task definition
       uses: aws-actions/amazon-ecs-deploy-task-definition@v1
       with:
         task-definition: ${{ steps.task-def.outputs.task-definition }}
         service: ${{ env.ECS_SERVICE }}
         cluster: ${{ env.ECS_CLUSTER }}
         wait-for-service-stability: true
     - name: Send mail
       if: always()
       uses: dawidd6/action-send-mail@v3
       with:
         server_address: smtp.mail.yahoo.com
         server_port: 465
         username: ${{secrets.MAIL_USERNAME}}
         password: ${{secrets.MAIL_PASSWORD}}
         subject: Workflow completed for ${{ github.repository }} --  ${{job.status}}
         body: "Job completed ${{job.status}} ${{ toJson(job) }}"
         to: get.draman@gmail.com
         from: Git hub actions
